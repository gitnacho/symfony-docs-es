.. index::
   single: Seguridad; Referencia de configuración

Referencia en configurando ``Security``
=======================================

El sistema de seguridad es una de las piezas más poderosas de *Symfony2*, y en gran medida se puede controlar por medio de su configuración.

Configuración predeterminada completa
-------------------------------------

La siguiente es la configuración predeterminada para el sistema de seguridad completo.
Cada parte se explica en la siguiente sección.

.. configuration-block::

    .. code-block:: yaml

        # app/config/security.yml
        security:
            access_denied_url:    ~ # Example: /foo/error403

            # la estrategia puede ser: none, migrate, invalidate
            session_fixation_strategy:  migrate
            hide_user_not_found:  true
            always_authenticate_before_granting:  false
            erase_credentials:    true
            access_decision_manager:
                strategy:             affirmative
                allow_if_all_abstain:  false
                allow_if_equal_granted_denied:  true
            acl:

                # any name configured in doctrine.dbal section
                connection:           ~
                cache:
                    id:                   ~
                    prefix:               sf2_acl_
                provider:             ~
                tables:
                    class:                acl_classes
                    entry:                acl_entries
                    object_identity:      acl_object_identities
                    object_identity_ancestors:  acl_object_identity_ancestors
                    security_identity:    acl_security_identities
                voter:
                    allow_if_object_identity_unavailable:  true

            encoders:
                # Ejemplos:
                Acme\DemoBundle\Entity\User1: sha512
                Acme\DemoBundle\Entity\User2:
                    algorithm:           sha512
                    encode_as_base64:    true
                    iterations:          5000

                # Example options/values for what a custom encoder might look like
                Acme\Your\Class\Name:
                    algorithm:            ~
                    ignore_case:          false
                    encode_as_base64:     true
                    iterations:           5000
                    id:                   ~

            providers:            # Required
                # Examples:
                memory:
                    name:                memory
                    users:
                        foo:
                            password:            foo
                            roles:               ROLE_USER
                        bar:
                            password:            bar
                            roles:               [ROLE_USER, ROLE_ADMIN]
                entity:
                    entity:
                        class:               SecurityBundle:User
                        property:            username

                # Example custom provider
                some_custom_provider:
                    id:                   ~
                    chain:
                        providers:            []

            firewalls:            # Required
                # Examples:
                somename:
                    pattern: .*
                    request_matcher: some.service.id
                    access_denied_url: /foo/error403
                    access_denied_handler: some.service.id
                    entry_point: some.service.id
                    provider: some_key_from_above
                    context: name
                    stateless: false
                    x509:
                        provider: some_key_from_above
                    http_basic:
                        provider: some_key_from_above
                    http_digest:
                        provider: some_key_from_above
                    form_login:
                        check_path: /login_check
                        login_path: /login
                        use_forward: false
                        always_use_default_target_path: false
                        default_target_path: /
                        target_path_parameter: _target_path
                        use_referer: false
                        failure_path: /foo
                        failure_forward: false
                        failure_handler: some.service.id
                        success_handler: some.service.id
                        username_parameter: _username
                        password_parameter: _password
                        csrf_parameter: _csrf_token
                        intention: authenticate
                        csrf_provider: my.csrf_provider.id
                        post_only: true
                        remember_me: false
                    remember_me:
                        token_provider: name
                        key: someS3cretKey
                        name: NameOfTheCookie
                        lifetime: 3600 # in seconds
                        path: /foo
                        domain: somedomain.foo
                        secure: false
                        httponly: true
                        always_remember_me: false
                        remember_me_parameter: _remember_me
                    logout:
                        path:   /logout
                        target: /
                        invalidate_session: false
                        delete_cookies:
                            a: { path: null, domain: null }
                            b: { path: null, domain: null }
                        handlers: [some.service.id, another.service.id]
                        success_handler: some.service.id
                    anonymous: ~

                # Default values and options for any firewall
                some_firewall_listener:
                    pattern:              ~
                    security:             true
                    request_matcher:      ~
                    access_denied_url:    ~
                    access_denied_handler:  ~
                    entry_point:          ~
                    provider:             ~
                    stateless:            false
                    context:              ~
                    logout:
                        csrf_parameter:       _csrf_token
                        csrf_provider:        ~
                        intention:            logout
                        path:                 /logout
                        target:               /
                        success_handler:      ~
                        invalidate_session:   true
                        delete_cookies:

                            # Prototype
                            name:
                                path:                 ~
                                domain:               ~
                        handlers:             []
                    anonymous:
                        key:                  4f954a0667e01
                    switch_user:
                        provider:             ~
                        parameter:            _switch_user
                        role:                 ROLE_ALLOWED_TO_SWITCH

            access_control:
                requires_channel:     ~

                # use the urldecoded format
                path:                 ~ # Example: ^/path to resource/
                host:                 ~
                ip:                   ~
                methods:              []
                roles:                []
            role_hierarchy:
                ROLE_ADMIN:      [ROLE_ORGANIZER, ROLE_USER]
                ROLE_SUPERADMIN: [ROLE_ADMIN]

.. _reference-security-firewall-form-login:

Configurando el formulario de acceso
------------------------------------

Cuando usas el escucha de autenticación ``form_login`` bajo un cortafuegos, hay varias opciones comunes para experimentar en la configuración del "formulario de acceso":

Procesando el formulario de acceso
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

*   ``login_path`` (type: ``string``, default: ``/login``)
    Esta es la *URL* a que el usuario será redirigido (a menos que ``use_forward`` se haya fijado en ``true``) cuando intente acceder a un recurso protegido, pero no está totalmente autenticado.

    Esta **URL** debe ser accesible por un usuario normal, no autenticado, de lo contrario puede crear un bucle de redireccionamiento. Para más información, consulta ":ref:`Evitando errores comunes <book-security-common-pitfalls>`".

*   ``check_path`` (type: ``string``, default: ``/login_check``)
    Esta es la *URL* en la cual se debe presentar el formulario de inicio de sesión. El cortafuegos intercepta cualquier petición (sólo las peticiones *POST*, por omisión) a esta *URL* y procesa las credenciales presentadas.

    Asegúrate de que esta dirección está cubierta por el cortafuegos principal (es decir, no crees un servidor de seguridad independiente sólo para la *URL* ``check_path``).

*   ``use_forward`` (type: ``Boolean`` **predeterminado**: ``false``)
    Si deseas que el usuario sea remitido al formulario de acceso en vez de ser redirigido, marca esta opción a ``true``.

*   ``username_parameter`` (type: ``string``, default: ``_username``)
    Este es el nombre del campo que debes dar al campo 'nombre de usuario' de tu formulario de acceso. Cuando se presenta el formulario a ``check_path``, el sistema de seguridad buscará un parámetro *POST* con este nombre.

*   ``password_parameter`` (type: ``string``, default: ``_password``)
    Este es el nombre de campo que se debe dar al campo de la contraseña de tu formulario de inicio de sesión. Cuando se presenta el formulario a ``check_path``, el sistema de seguridad buscará un parámetro *POST* con este nombre.

*   ``post_only`` (type: ``Boolean`` **predeterminado**: ``true``)
    De forma predeterminada, debes enviar tu formulario de acceso a la *URL* ``check_path`` como una petición *POST*. Al poner esta opción a ``false``, puedes enviar una petición *GET* a la *URL* ``check_path``.

Redirigiendo después del inicio de sesión
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* ``always_use_default_target_path`` (type: ``Boolean`` **predeterminado**: ``false``)
* ``default_target_path`` (type: ``string``, default: ``/``)
* ``target_path_parameter`` (type: ``string``, default: ``_target_path``)
* ``use_referer`` (type: ``Boolean`` **predeterminado**: ``false``)
