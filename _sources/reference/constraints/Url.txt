Url
===

Valida que un valor es una cadena *URL* válida.

+----------------+---------------------------------------------------------------------+
| Aplica a       | :ref:`propiedad o método <validation-property-target>`              |
+----------------+---------------------------------------------------------------------+
| Opciones       | - `message`_                                                        |
|                | - `protocols`_                                                      |
+----------------+---------------------------------------------------------------------+
| Clase          | :class:`Symfony\\Component\\Validator\\Constraints\\Url`            |
+----------------+---------------------------------------------------------------------+
| Validador      | :class:`Symfony\\Component\\Validator\\Constraints\\UrlValidator`   |
+----------------+---------------------------------------------------------------------+

Uso básico
----------

.. configuration-block::

    .. code-block:: yaml

        # src/BlogBundle/Resources/config/validation.yml
        Acme\BlogBundle\Entity\Author:
            properties:
                bioUrl:
                    - Url:

    .. code-block:: php-annotations

        // src/Acme/BlogBundle/Entity/Author.php
        namespace Acme\BlogBundle\Entity;
        
        use Symfony\Component\Validator\Constraints as Assert;

        class Autor
        {
            /**
             * @Assert\Url()
             */
             protected $bioUrl;
        }

    .. code-block:: xml

        <!-- src/Acme/BlogBundle/Resources/config/validation.xml -->
        <class name="Acme\BlogBundle\Entity\Author">
            <property name="bioUrl">
                <constraint name="Url" />
            </property>
        </class>

    .. code-block:: php

        // src/Acme/BlogBundle/Entity/Author.php
        namespace Acme\BlogBundle\Entity;
        
        use Symfomy\Component\Validator\Mapping\ClassMetadata;
        use Symfony\Component\Validator\Constraints as Assert;
  
        class Autor
        {
            public static function loadValidatorMetadata(ClassMetadata $metadata)
            {
                $metadata->addPropertyConstraint('bioUrl', new Assert\Url());
            }
        }
  
Opciones
--------

``message``
~~~~~~~~~~~

**tipo**: ``string`` **predefinido**: ``This value is not a valid URL`` (``Este valor no es una URL válida``)

Este mensaje aparece si la *URL* no es válida.

``protocols``
~~~~~~~~~~~~~

**tipo**: ``array`` **predeterminado**: ``array('http', 'https')``

Los protocolos que se consideran válidos. Por ejemplo, si también necesitas que las *URL* tipo ``ftp://`` sean válidas, redefine el arreglo de protocolos, listando ``http``, ``https``, y además ``ftp``.
