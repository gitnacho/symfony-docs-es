``SizeLength``
==============

Valida que la longitud de una cadena está *entre* algún valor mínimo y máximo según el juego de caracteres proporcionado.

+----------------+--------------------------------------------------------------------------+
| Aplica a       | :ref:`propiedad o método <validation-property-target>`                   |
+----------------+--------------------------------------------------------------------------+
| Opciones       | - `min`_                                                                 |
|                | - `max`_                                                                 |
|                | - `charset`_                                                             |
|                | - `minMessage`_                                                          |
|                | - `maxMessage`_                                                          |
|                | - `exactMessage`_                                                        |
+----------------+--------------------------------------------------------------------------+
| Clase          | :class:`Symfony\\Component\\Validator\\Constraints\\SizeLength`          |
+----------------+--------------------------------------------------------------------------+
| Validador      | :class:`Symfony\\Component\\Validator\\Constraints\\SizeLengthValidator` |
+----------------+--------------------------------------------------------------------------+

Uso básico
----------

Para verificar que la longitud del campo ``firstName`` de una clase está entre ``2`` y ``50``, puedes agregar lo siguiente:

.. configuration-block::

    .. code-block:: yaml

        # src/Acme/EventBundle/Resources/config/validation.yml
        Acme\EventBundle\Entity\Height:
            properties:
                firstName:
                    - SizeLength:
                        min: 2
                        max: 50
                        minMessage: Tu primer nombre por lo menos debe tener 2 caracteres de largo
                        maxMessage: Tu primer nombre no puede tener más de 50 caracteres de largo

    .. code-block:: php-annotations

        // src/Acme/EventBundle/Entity/Participant.php
        use Symfony\Component\Validator\Constraints as Assert;

        class Participant
        {
            /**
             * @Assert\SizeLength(
             *      min = "2",
             *      max = "50",
             *      minMessage = "Tu primer nombre por lo menos debe tener 2 caracteres de largo",
             *      maxMessage="Tu primer nombre no puede tener más de 50 caracteres de largo"
             * )
             */
             protected $firstName;
        }

Opciones
--------

``min``
~~~~~~~

**tipo**: ``integer`` [:ref:`default option<validation-default-option>`]

Esta opción requerida es el valor de la longitud ``mínima``. La validación fallará si la longitud del valor suministrado es **menor** que este valor ``mínimo``.

``max``
~~~~~~~

**tipo**: ``integer`` [:ref:`default option<validation-default-option>`]

Esta opción requerida es el valor de la longitud ``máxima``. La validación fallará si la longitud del valor suministrado es **mayor** que este valor ``máximo``.

``charset``
~~~~~~~~~~~

**tipo**: ``string`` **predeterminado**: ``UTF-8``

El juego de caracteres a usar al calcular la longitud del valor. Si está disponible, se usa la función `grapheme_strlen`_ de *PHP*. Si no, se usa la función `mb_strlen`_ de *PHP*, si está disponible. Si ninguna está disponible, se usa la función `strlen`_ de *PHP*.

.. _`grapheme_strlen`: http://www.php.net/manual/es/function.grapheme-strlen.php
.. _`mb_strlen`: http://www.php.net/manual/es/function.mb-strlen.php
.. _`strlen`: http://www.php.net/manual/es/function.strlen.php

``minMessage``
~~~~~~~~~~~~~~

**tipo**: ``string`` **predeterminado**: ``This value is too short. It should have {{ limit }} characters or more`` (``Este valor es demasiado corto. Debería tener {{ limit }} caracteres o más``)

El mensaje que se mostrará si la longitud del valor subyacente es menor que la opción `min`_.

``maxMessage``
~~~~~~~~~~~~~~

**tipo**: ``string`` **predeterminado**: ``This value is too long. It should have {{ limit }} characters or less`` (``Este valor es demasiado largo. Debería tener {{ limit }} caracteres o menos``)

El mensaje que se mostrará si la longitud del valor subyacente es mayor que la opción `max`_.

``exactMessage``
~~~~~~~~~~~~~~~~

**tipo**: ``string`` **predeterminado**: ``This value should have exactly {{ limit }} characters.`` (``Este valor debería tener exactamente {{ limit }} caracteres.``)

El mensaje que se mostrará si los valores ``min`` y ``max`` son iguales y la longitud del valor subyacente no es de exactamente este valor.
