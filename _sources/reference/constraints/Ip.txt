``Ip``
======

Valida que un valor es una dirección *IP* válida. Por omisión, este lo valida como *IPv4*, pero hay una serie de diferentes opciones para validarlo como *IPv6* y muchas otras combinaciones.

+----------------+---------------------------------------------------------------------+
| Aplica a       | :ref:`propiedad o método <validation-property-target>`              |
+----------------+---------------------------------------------------------------------+
| Opciones       | - `version`_                                                        |
|                | - `message`_                                                        |
+----------------+---------------------------------------------------------------------+
| Clase          | :class:`Symfony\\Component\\Validator\\Constraints\\Ip`             |
+----------------+---------------------------------------------------------------------+
| Validador      | :class:`Symfony\\Component\\Validator\\Constraints\\IpValidator`    |
+----------------+---------------------------------------------------------------------+

Uso básico
----------

.. configuration-block::

    .. code-block:: yaml

        # src/BlogBundle/Resources/config/validation.yml
        Acme\BlogBundle\Entity\Author:
            properties:
                ipAddress:
                    - Ip:

    .. code-block:: php-annotations

       // src/Acme/BlogBundle/Entity/Author.php
       namespace Acme\BlogBundle\Entity;
       
       use Symfony\Component\Validator\Constraints as Assert;

       class Author
       {
           /**
            * @Assert\Ip
            */
            protected $ipAddress;
       }

Opciones
--------

``version``
~~~~~~~~~~~

**tipo**: ``string`` **predeterminado**: ``4``

Esta determina exactamente *cómo* se valida la dirección *IP* y puede tomar uno de una serie de diferentes valores:

**Todos los rangos**

* ``4`` --- Valida direcciones IPv4
* ``6`` --- Valida direcciones IPv6
* ``all`` --- Valida todos los formatos IP

**No hay rangos privados**

* ``4_no_priv`` --- Valida por *IPv4*, pero sin rangos *IP* privados
* ``6_no_priv``   --- Valida por *IPv6*, pero sin rangos *IP* privados
* ``all_no_priv`` --- Valida todos los formatos *IP*, pero sin rangos *IP* privados

**No hay rangos reservados**

* ``4_no_res`` --- Valida por *IPv4*, pero sin rangos *IP* reservados
* ``6_no_res`` --- Valida por *IPv6*, pero sin rangos *IP* reservados
* ``all_no_priv`` --- Valida todos los formatos *IP*, pero sin rangos *IP* reservados

**Sólo rangos públicos**

* ``4_public`` --- Valida por *IPv4*, pero sin rangos *IP* privados y reservados
* ``6_public`` --- Valida por *IPv6*, pero sin rangos *IP* privados y reservados
* ``all_public`` --- Valida todos los formatos *IP*, pero sin rangos *IP* privados y reservados

``message``
~~~~~~~~~~~

**tipo**: ``string`` **predeterminado**: ``This is not a valid IP address`` (``Esta no es una dirección IP válida``)

Este mensaje se muestra si la cadena no es una dirección *IP* válida.
