``Language``
============

Valida que un valor es un código de idioma válido.

+----------------+------------------------------------------------------------------------+
| Aplica a       | :ref:`propiedad o método <validation-property-target>`                 |
+----------------+------------------------------------------------------------------------+
| Opciones       | - `message`_                                                           |
+----------------+------------------------------------------------------------------------+
| Clase          | :class:`Symfony\\Component\\Validator\\Constraints\\Language`          |
+----------------+------------------------------------------------------------------------+
| Validador      | :class:`Symfony\\Component\\Validator\\Constraints\\LanguageValidator` |
+----------------+------------------------------------------------------------------------+

Uso básico
----------

.. configuration-block::

    .. code-block:: yaml

        # src/UserBundle/Resources/config/validation.yml
        Acme\UserBundle\Entity\User:
            properties:
                preferredLanguage:
                    - Language:

    .. code-block:: php-annotations

       // src/Acme/UserBundle/Entity/User.php
       namespace Acme\UserBundle\Entity;
       
       use Symfony\Component\Validator\Constraints as Assert;

       class User
       {
           /**
            * @Assert\Language
            */
            protected $preferredLanguage;
       }

Opciones
--------

``message``
~~~~~~~~~~~

**tipo**: ``string`` **predefinido**: ``This value is not a valid language`` (``Este valor no es un idioma válido``)

Este mensaje se muestra si la cadena no es un código de idioma válido.
