``TreeBrowserBundle``
=====================

El `TreeBrowserBundle <https://github.com/symfony-cmf/TreeBrowserBundle#readme>`_
proporciona integración con :doc:`tree` para proporcionar un árbol de navegación en lo alto de un repositorio *PHPCR*.

Este paquete consta de dos partes:

 * Árbol de navegación genérico con una ``TreeInterface``
 * Implementación del árbol *PHPCR* e *IGU* para un navegador *PHPCR*

.. index:: TreeBrowserBundle

Dependencias
------------

* `TreeBundle <https://github.com/symfony-cmf/TreeBundle#readme>`_

Configurando
------------

La clave de configuración para este paquete es ``symfony_cmf_tree_browser``

.. configuration-block::

    .. code-block:: yaml

        # app/config/config.yml
        symfony_cmf_tree_browser:
            session:  default

Usando
------

Tienes :file:`select.js` e :file:`init.js` los cuáles son una envoltura para construir un árbol *jQuery*. Úsalos con ``SelectTree.initTree`` ``resp.`` ``AdminTree.initTree``

 * ``SelectTree`` en :file:`select.js` es un árbol para seleccionar un nodo para poner su ID a un campo
 * ``AdminTree`` en :file:`init.js` es para crear un árbol, mover y editar nodos

Ambos tienen las siguientes opciones al crearlos:

 * config.rootNode: id para el nodo raíz de tu árbol, predefinido a "/"
 * config.path.expanded: ruta de árbol donde el árbol se tendría que expandir al momento
 * config.path.preloaded: ruta del árbol hacia qué nodo se tendría que precargar para una experiencia de usuario más rápida
 * config.ajax.children_url: *URL* al controlador que proporciona los hijos de un nodo
 * config.selector: Selector *jQuery* dónde enganchar en el árbol *js*

Solo :file:`select.js`
~~~~~~~~~~~~~~~~~~~~~~

 * config.output: Dónde escribir el Id del nodo seleccionado

Solo :file:`init.js`
~~~~~~~~~~~~~~~~~~~~

 * config.ajax.move_url: *URL* al controlador que maneja la operación de movimiento
 * config.doctypes: arreglo para manejar la creación de nuevos nodos
 * config.routecollection: arreglo indexado con el atributo ``className`` de los nodos más ``.routes.edit`` y ``.routes.delete`` asociadas a rutas para las operaciones de edición y remoción.

Ejemplos
--------

Ve en las plantillas del paquete de administración de ``Sonata`` los ejemplos sobre cómo construir el árbol:

* `init.js <https://github.com/sonata-project/SonataDoctrinePhpcrAdminBundle/blob/master/Resources/views/Tree/tree.html.twig>`_
* `select.js <https://github.com/sonata-project/SonataDoctrinePhpcrAdminBundle/blob/master/Resources/views/Form/form_admin_fields.html.twig>`_ (busca ``doctrine_phpcr_type_tree_model_widget``)